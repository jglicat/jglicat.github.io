<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Linux - 标签 - My New Hugo Site</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Linux - 标签 | My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Dec 2021 03:29:25 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/linux/" rel="self" type="application/rss+xml" /><item>
  <title>linux设置后台任务</title>
  <link>http://localhost:1313/posts/linux%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1/</link>
  <pubDate>Thu, 09 Dec 2021 03:29:25 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://localhost:1313/posts/linux%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1/</guid>
  <description><![CDATA[设置后台任务（以scp为例） 正常执行命令 [root@oradb30 ~]# scp -r /u01/media/Disk1/ 192.168.1.31:/u01/media/ reverse mapping checking getaddrinfo for bogon failed - POSSIBLE BREAK-IN ATTEMPT! root@192.168.1.31&#39;s password: ... filegroup2.jar 100% 84KB 83.8KB/s 00:00 filegroup9.jar 暂停 输入ctrl + z 暂停
[1]+ Stopped scp -r /u01/media/Disk1/ 192.168.1.31:/u01/media/ [root@oradb30 ~]# 此时查看jobs：
[root@oradb30 ~]# jobs [1]+ Stopped scp -r /u01/media/Disk1/ 192.168.1.31:/u01/media/ [root@oradb30 ~]# bg将其放入后台 bg将该任务号放入后台:
[root@oradb30 media]# bg %1 [1]+ scp -r Disk1/ 192.168.1.31:/u01/media/ &amp;查看任务已经在后台运行:
[root@oradb30 media]# jobs [1]+ Running scp -r Disk1/ 192.]]></description>
</item>
<item>
  <title>ssh相关问题</title>
  <link>http://localhost:1313/posts/ssh%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
  <pubDate>Thu, 09 Dec 2021 03:24:44 &#43;0000</pubDate>
  <author>作者</author>
  <guid>http://localhost:1313/posts/ssh%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[配置别名 sudo vim ~/.ssh/config Host 别名名称 HostName IP或者域名 Port 端口 User 用户名 IdentitiesOnly yes登录安全性 配置免密登录 # 先在客户端生成密钥对（一路回车就行） ssh-keygen # 上传公钥到服务器 ssh-copy-id -i ~/.ssh/id_rsa.pub 用户名@IP # 如果已配置别名，也可以 ssh-copy-id -i ~/.ssh/id_rsa.pub 别名秘钥登录 添加公钥 首先将私钥~/.ssh/id_rsa保存下来
https://wangdoc.com/ssh/key.html
OpenSSH 自带一个ssh-copy-id命令，可以自动将公钥拷贝到远程服务器的~/.ssh/authorized_keys文件。如果~/.ssh/authorized_keys文件不存在，ssh-copy-id命令会自动创建该文件
ssh-copy-id -i key_file user@host上面命令中，-i参数用来指定公钥文件，user是所要登录的账户名，host是服务器地址。如果省略用户名，默认为当前的本机用户名。执行完该命令，公钥就会拷贝到服务器。
注意，公钥文件可以不指定路径和.pub后缀名，ssh-copy-id会自动在~/.ssh目录里面寻找。
# 将公钥添加到authorized_keys文件末尾 ssh-copy-id -i id_rsa user@localhost上面命令中，公钥文件会自动匹配到~/.ssh/id_rsa.pub。
ssh-copy-id会采用密码登录，系统会提示输入远程服务器的密码。
注意，ssh-copy-id是直接将公钥添加到authorized_keys文件的末尾。如果authorized_keys文件的末尾不是一个换行符，会导致新的公钥添加到前一个公钥的末尾，两个公钥连在一起，使得它们都无法生效。所以，如果authorized_keys文件已经存在，使用ssh-copy-id命令之前，务必保证authorized_keys文件的末尾是换行符（假设该文件已经存在）。
关闭密码登录 sudo vim /etc/ssh/sshd_config # 添加 DenyUsers root@127.0.0.1 Match User root PasswordAuthentication yes Match all PasswordAuthentication no # 重启ssh服务 sudo systemctl restart sshroot用户可以用密码登录，其他用户必须采用秘钥登录，同时禁止root在本地登录（frp跳转后实际上是本地登录）]]></description>
</item>
</channel>
</rss>
